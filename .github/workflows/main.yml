# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-ros-opencv:
    name: Build ros opencv
    runs-on: ubuntu-20.04

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check-out repository
        uses: actions/checkout@v2
        with:
        # "2" -> To retrieve the preceding commit
          fetch-depth: 2
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: Dockerfile/ros_opencv.Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile/ros_opencv.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ros2_opencv
          
  build-ros-pcl:
    name: Build ros pcl
    runs-on: ubuntu-20.04
    
    steps:
      - name: Check-out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: Dockerfile/ros_pcl.Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        if: steps.changed-files-specific.outputs.any_changed == 'true'          
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile/ros_pcl.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ros2_pcl
          
  build-ros-basler:
    name: Build ros basler
    runs-on: ubuntu-20.04
    
    steps:
      - name: Check-out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: |
            Dockerfile/ros_basler.Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        if: steps.changed-files-specific.outputs.any_changed == 'true'               
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile/ros_basler.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ros2_basler
          
  build-ros-galaxy:
    name: Build ros galaxy
    runs-on: ubuntu-20.04
    
    steps:
      - name: Check-out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: Dockerfile/ros_galaxy.Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile/ros_galaxy.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ros2_galaxy          
          
  build-ros-build:
    name: Build ros build
    runs-on: ubuntu-20.04
    needs: [build-ros-basler, build-ros-galaxy, build-ros-pcl, build-ros-opencv, build-ros-opencv]

    steps:
      - name: Check-out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: |
            Dockerfile/ros_basler.Dockerfile
            Dockerfile/ros_galaxy.Dockerfile
            Dockerfile/ros_pcl.Dockerfile
            Dockerfile/ros_build.Dockerfile
            Dockerfile/ros_opencv.Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push        
        if: steps.changed-files-specific.outputs.any_changed == 'true'        
        uses: docker/build-push-action@v2        
        with:
          context: .
          file: ./Dockerfile/ros_build.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ros2_build 
          
  test_ros-contain-basler:
    name: Build ros build
    runs-on: ubuntu-20.04
    needs: [build-ros-build]

    steps:
      - name: Check-out repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 2
       
      - name: Check if submodule is on most recent master commit
        uses: jtmullen/submodule-branch-check-action@v1
        with:
          path: "src"
          branch: "dev-binocular"
          require_head: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push                  
        uses: docker/build-push-action@v2        
        with:
          context: .
          file: ./Dockerfile/ros_test_contain_basler.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ros2_test_contain_basler 