cmake_minimum_required(VERSION 3.5)

cmake_policy(SET CMP0074 OLD) 

# compiler configuration

set(CMAKE_CXX_STANDARD 14)


project(test VERSION 1.0.0.001 LANGUAGES CXX)

#--------------------------------------------
# Project setting
#--------------------------------------------
# include(cmake/FindPYLON.cmake)



message(INFO "--------------------------------")
message(STATUS "PROJECT_NAME: ${PROJECT_NAME}")
aux_source_directory(. CURRENT_DIR_SRCS)
#message (STATUS "CURRENT_DIR_SRCS: ${CURRENT_DIR_SRCS}")
#add_executable(${PROJECT_NAME} ${CURRENT_DIR_SRCS})
add_executable(${PROJECT_NAME} src/camera_basler.cpp)

find_package(OpenCV REQUIRED)
if(OpenCV_FOUND)
	target_link_libraries(${PROJECT_NAME} PUBLIC ${OpenCV_LIBS})	
else()
	message(FATAL_ERROR "[${PROJECT_NAME}]: OpenCV Not Found")
endif(OpenCV_FOUND)


set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake" CMAKE_MODULE_PATH)
find_package(PYLON REQUIRED)
if(PYLON_FOUND)
    message(STATUS "PYLON_INCLUDE_DIRS: ${PYLON_INCLUDE_DIRS}")
    # target_include_directories(${PROJECT_NAME} PUBLIC ${PYLON_INCLUDE_DIRS})
else()
    message(FATAL_ERROR "[${PROJECT_NAME}]: PYLON Not Found")
endif(PYLON_FOUND)



target_link_libraries(${PROJECT_NAME} PUBLIC PYLON::PYLON gpiod)